AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar project ID.
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''
  DataBucketName:
    Type: String
    Default: 'for-dev-bucket'

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: AllAtOnce
      Role: !Ref CodeDeployRole

Resources:
  CustomDefaultFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-CustomDefaultFunction'
      CodeUri: 'lambda/custom'
      Handler: library.handler
      Runtime: python3.9
      Architectures:
        - arm64
      Layers:
        - arn:aws:lambda:ap-northeast-1:017000801446:layer:AWSLambdaPowertoolsPython:13
      Timeout: 20
      Events:
        AlexaSkillEvent:
          Type: AlexaSkill
      Environment:
        Variables:
          LOG_LEVEL: INFO
          POWERTOOLS_SERVICE_NAME: kamalib_alexa
          TZ: Asia/Tokyo
      Policies:
        - S3ReadPolicy: # S3リードポリシー設定
            BucketName: {{resolve:ssm:kamalib_s3bucket:1}}
      - Statement:
        - Sid: SSMDescribeParametersPolicy
          Effect: Allow
          Action:
          - ssm:DescribeParameters
          Resource: '*'
        - Sid: SSMPutGetParameterPolicy
          Effect: Allow
          Action:
          - ssm:GetParameters
          - ssm:GetParameter
          - ssm:PutParameters
          - ssm:PutParameter
          Resource: '*'

Outputs:
  overrides:
      Value: !Sub |-
        {
          "manifest": {
            "apis": {
              "custom": {
                "endpoint": {
                  "uri": "${CustomDefaultFunction.Alias}"
                }
              }
            }
          }
        }
